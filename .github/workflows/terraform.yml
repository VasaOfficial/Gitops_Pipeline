name: Terraform Infrastructure

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**
env:
  # credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # S3 bucket for the terraform state.
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1

jobs:
  terraform:
    name: "Apply terraform code changes (Fake)"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Fake Setup Terraform
        run: echo "Simulating Terraform setup..."

      - name: Fake Terraform Init
        id: init
        run: echo "Simulating terraform init -backend-config 'bucket=$BUCKET_TF_STATE'"

      - name: Fake Terraform Format
        id: fmt
        run: echo "Simulating terraform fmt -check"
        continue-on-error: true

      - name: Fake Terraform Validate
        id: validate
        run: echo "Simulating terraform validate"

      - name: Fake Terraform Plan
        id: plan
        run: echo "Simulating terraform plan -no-color -input=false -out planfile"
        continue-on-error: true

      - name: Fake Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: echo "Simulating failure handling" && exit 1

      - name: Fake Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: echo "Simulating terraform apply -auto-approve -input=false -parallelism=1 planfile" && sleep 30
